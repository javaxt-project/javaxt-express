name: Create Release

on:
  push:
    tags:
    - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10


jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2


      - name: Create release name using the tag name
        run: |
             githubRef=${{ github.ref }}
             githubRef="${githubRef/'refs/tags'/''}"
             githubRef="${githubRef/'/'/''}"
             githubRef="${githubRef/'v'/''}"
             echo "releaseLabel=$githubRef" >> $GITHUB_ENV


      - name: Print release label
        run: echo $releaseLabel


      - name: Create release directory
        run: mkdir release


    ### Generate minified javascript file

      - name: Create temp directory
        run: mkdir temp


      - name: Combine javascript files into a single file
        run: find ./ui/javascript -name '*.js' -exec cat {} \; > ./temp/javaxt-express.js


      - name: Minify the combined file
        uses: nizarmah/auto-minify@v2.1
        with:
          directory: ./temp
          output: ./release
          overwrite: true


      - name: Insert release info into the minified file
        run: |
             sudo chmod 777 ./release/javaxt-express.js
             printf '%s\n%s\n' "//javaxt-express ${{ env.releaseLabel }}" "$(cat ./release/javaxt-express.js)" >./release/javaxt-express.js


    ### Generate jar file

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'


      - name: Install Maven
        run: sudo apt install maven


      - name: Check Maven Version
        run: mvn -version


      - name: Build jar using Maven
        run: mvn --batch-mode install verify -U -X


    ### Create zip file

      - name: Copy jar file from the dist to the release directory
        run: cp dist/javaxt-express*.jar release


      - name: Copy release assets to the release directory
        run: cp -r src ui LICENSE.TXT release


      - name: Create zip file
        run: cd release; zip -r ../javaxt-express_v${{ env.releaseLabel }}.zip *


    ### Upload zip file to javaxt.com

      - name: Upload release to server
        run: >-
          curl -X POST -L
          -H "Authorization: ${{ secrets.UPLOAD_AUTH }}"
          -F "file=@javaxt-express_v${{ env.releaseLabel }}.zip;type=application/zip"
          "${{ secrets.UPLOAD_URL }}"

